<?php

/**
 * @file
 * Provides functionality to add theme suggestions and pass variables.
 */

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function custom_theme_theme_suggestions_node_alter(array &$suggestions, array $variables) {
  // Get current node url.
  $node = $variables['elements']['#node'];
  $node_url = $node->toUrl()->toString();

  // Check whether the node url is of required node or not.
  if ($node_url === '/custom-render') {
    $suggestions[] = 'node__custom_render';
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function custom_theme_preprocess_html(&$variables) {
  // Get current node url.
  $node_url = \Drupal::request()->getRequestUri();

  // Check whether the node url is of required node or not.
  if ($node_url === '/custom-render') {
    $variables['attributes']['class'][] = 'custom-render';
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function custom_theme_preprocess_node(&$variables) {
  // Get current node url.
  $node_url = $variables['url'];

  // Check whether the node url is of required node or not.
  if ($node_url === '/custom-render') {
    $colors = [
      'color1' => 'red',
      'color2' => 'green',
      'color3' => 'blue',
    ];

    // Add the colors variable to the variables array.
    $variables['colors'] = $colors;

    // Attach the custom_theme/custom-render library to the page.
    $variables['#attached']['library'][] = 'custom_theme/custom-render';
  }
}